# Generated by Django 5.2.7 on 2025-10-07 16:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vendors', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='vendor',
            name='delivery_fee',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='vendor',
            name='delivery_radius_km',
            field=models.IntegerField(default=5, help_text='Delivery radius in kilometers'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='min_order_amount',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.CreateModel(
            name='GasProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Pro Gas LPG, K-Gas, etc.', max_length=200)),
                ('gas_type', models.CharField(choices=[('lpg', 'LPG (Cooking Gas)'), ('cng', 'CNG (Compressed Natural Gas)'), ('oxygen', 'Medical Oxygen'), ('nitrogen', 'Industrial Nitrogen'), ('acetylene', 'Acetylene')], default='lpg', max_length=20)),
                ('cylinder_size', models.CharField(choices=[('1kg', '1 kg'), ('3kg', '3 kg'), ('5kg', '5 kg'), ('6kg', '6 kg'), ('13kg', '13 kg'), ('15kg', '15 kg'), ('22kg', '22 kg'), ('50kg', '50 kg'), ('100kg', '100 kg')], default='13kg', max_length=10)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('price_with_cylinder', models.DecimalField(decimal_places=2, help_text='Price including cylinder deposit', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_without_cylinder', models.DecimalField(decimal_places=2, help_text='Price for gas refill only (customer provides cylinder)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('cylinder_deposit', models.DecimalField(decimal_places=2, default=0.0, help_text='Cylinder deposit amount', max_digits=10)),
                ('stock_quantity', models.IntegerField(default=0, help_text='Current available stock', validators=[django.core.validators.MinValueValidator(0)])),
                ('min_stock_alert', models.IntegerField(default=5, help_text='Alert when stock reaches this level', validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, help_text='Product features and specifications')),
                ('ingredients', models.TextField(blank=True, help_text='Gas composition and purity')),
                ('safety_instructions', models.TextField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gas_products', to='vendors.vendor')),
            ],
            options={
                'ordering': ['gas_type', 'cylinder_size', 'name'],
                'unique_together': {('vendor', 'gas_type', 'cylinder_size', 'brand')},
            },
        ),
        migrations.CreateModel(
            name='GasPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_with_cylinder', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_without_cylinder', models.DecimalField(decimal_places=2, max_digits=10)),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='vendors.gasproduct')),
            ],
        ),
        migrations.CreateModel(
            name='GasProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gas_products/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vendors.gasproduct')),
            ],
        ),
    ]
