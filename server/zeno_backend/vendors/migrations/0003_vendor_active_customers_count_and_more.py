# Generated by Django 4.2.16 on 2025-10-26 11:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0004_alter_order_options_order_commission_rate_and_more'),
        ('payments', '0002_commissionsummary_paymentwebhooklog_payoutrequest_and_more'),
        ('vendors', '0002_vendor_delivery_fee_vendor_delivery_radius_km_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='vendor',
            name='active_customers_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='vendor',
            name='available_balance',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Amount available for payout', max_digits=12),
        ),
        migrations.AddField(
            model_name='vendor',
            name='commission_rate',
            field=models.DecimalField(decimal_places=2, default=10.0, help_text='Default commission rate for this vendor', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='vendor',
            name='completed_orders_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='vendor',
            name='dashboard_layout',
            field=models.JSONField(blank=True, default=dict, help_text="Vendor's dashboard layout preferences"),
        ),
        migrations.AddField(
            model_name='vendor',
            name='notification_preferences',
            field=models.JSONField(blank=True, default=dict, help_text='Notification settings for vendor'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='pending_payouts',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Amount in pending payouts', max_digits=12),
        ),
        migrations.AddField(
            model_name='vendor',
            name='total_earnings',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total earnings including pending', max_digits=12),
        ),
        migrations.AddField(
            model_name='vendor',
            name='total_orders_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='vendor',
            name='total_paid_out',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount paid to vendor', max_digits=12),
        ),
        migrations.CreateModel(
            name='VendorPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_orders', models.IntegerField(default=0)),
                ('completed_orders', models.IntegerField(default=0)),
                ('cancelled_orders', models.IntegerField(default=0)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('repeat_customers', models.IntegerField(default=0)),
                ('customer_satisfaction_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('last_order_date', models.DateTimeField(blank=True, null=True)),
                ('metrics_updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Vendor Performance',
                'verbose_name_plural': 'Vendor Performances',
            },
        ),
        migrations.CreateModel(
            name='VendorPayoutPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash Collection'), ('mobile_money', 'Other Mobile Money')], default='mpesa', max_length=20)),
                ('mobile_money_number', models.CharField(blank=True, help_text='Phone number for M-Pesa/Mobile Money', max_length=15)),
                ('mobile_money_name', models.CharField(blank=True, help_text='Account holder name for mobile money', max_length=255)),
                ('bank_name', models.CharField(blank=True, max_length=255)),
                ('bank_type', models.CharField(blank=True, choices=[('commercial', 'Commercial Bank'), ('sacco', 'SACCO'), ('microfinance', 'Microfinance Bank')], max_length=20)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('account_name', models.CharField(blank=True, max_length=255)),
                ('branch_code', models.CharField(blank=True, max_length=20)),
                ('swift_code', models.CharField(blank=True, max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_document', models.FileField(blank=True, null=True, upload_to='payout_verification/')),
                ('auto_payout', models.BooleanField(default=True, help_text='Automatically process payouts when threshold is reached')),
                ('payout_threshold', models.DecimalField(decimal_places=2, default=1000.0, help_text='Minimum amount to trigger automatic payout', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payout_preference', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Vendor Payout Preference',
                'verbose_name_plural': 'Vendor Payout Preferences',
            },
        ),
        migrations.CreateModel(
            name='PayoutTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash Collection'), ('mobile_money', 'Other Mobile Money')], max_length=20)),
                ('payout_reference', models.CharField(help_text='External transaction reference', max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='initiated', max_length=20)),
                ('recipient_details', models.JSONField(default=dict, help_text='Recipient bank/mobile details')),
                ('gateway_response', models.JSONField(blank=True, help_text='Response from payment gateway', null=True)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Payout Transaction',
                'verbose_name_plural': 'Payout Transactions',
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earning_type', models.CharField(choices=[('order', 'Order Payment'), ('refund', 'Refund'), ('adjustment', 'Manual Adjustment'), ('payout', 'Payout Deduction')], default='order', max_length=20)),
                ('gross_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Commission percentage taken by Zeno', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('paid', 'Paid to Vendor'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_earnings_relation', to='orders.order')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_earnings_relation', to='payments.payment')),
                ('payout_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='earnings', to='vendors.payouttransaction')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['vendor', 'status'], name='vendors_ven_vendor__4c4102_idx'), models.Index(fields=['created_at'], name='vendors_ven_created_ff38f9_idx')],
            },
        ),
    ]
